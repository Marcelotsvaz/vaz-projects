#
# VAZ Projects
#
#
# Author: Marcelo Tellier Sartori Vaz <marcelotsvaz@gmail.com>



stages:
    - test
    - deploy
    - upload


variables:
    PIP_CACHE_DIR: ${CI_PROJECT_DIR}/.cache/pip


default:
    image: python:3.9.6-bullseye



# 
# Jobs.
#-----------------------------------------------------------------------------------------------------------------------
test:
    stage: test
    
    environment:
        name: staging
        action: prepare
    
    services:
        - memcached:1.6.10-buster
        - name: elasticsearch:7.14.2
          command: [ 'elasticsearch', '-Ediscovery.type=single-node' ]
          variables:
              ES_JAVA_OPTS: '-Xms128m -Xmx128m'
    
    cache:
        paths:
            - .cache/pip/
    
    script:
        - set -a; source server/scripts/local.sh; set +a
        - apt-get update; apt-get install --yes --no-install-recommends --quiet libmemcached-dev
        - pip install -r requirements/${CI_ENVIRONMENT_TIER}.txt
        - mkdir -p deployment; cp ${DJANGO_SECRETS_FILE} deployment/secrets.py
        - coverage run vazProjects/manage.py test vazProjects --pattern='tests.py'
        - coverage report; coverage xml
    
    artifacts:
        reports:
            cobertura: deployment/coverage.xml


deployEnvironment:
    image:
        name: hashicorp/terraform:1.1.4
        entrypoint: [ "" ]
    
    stage: deploy
    
    environment:
        name: staging
        action: start
        on_stop: destroyEnvironment
    
    cache:
        paths:
            - deployment/terraform/
    
    script:
        - apk add --no-cache bash tar
        - server/scripts/deploy.sh deployEnvironment ${CI_ENVIRONMENT_TIER}
    
    artifacts:
        paths:
            - deployment/environment.sh


destroyEnvironment:
    image:
        name: hashicorp/terraform:1.1.4
        entrypoint: [ "" ]
    
    stage: deploy
    
    environment:
        name: staging
        action: stop
    
    rules:
        - when: manual
          allow_failure: true
    
    cache:
        paths:
            - deployment/terraform/
    
    script:
        - apk add --no-cache bash
        - server/scripts/deploy.sh destroyEnvironment ${CI_ENVIRONMENT_TIER}


uploadFiles:
    stage: upload
    
    environment:
        name: staging
        action: prepare
    
    cache:
        paths:
            - .cache/pip/
    
    script:
        - apt-get update; apt-get install --yes --no-install-recommends --quiet libmemcached-dev npm awscli
        - npm install --global less
        - pip install -r requirements/${CI_ENVIRONMENT_TIER}.txt
        - mkdir -p deployment; cp ${DJANGO_SECRETS_FILE} deployment/secrets.py
        - server/scripts/deploy.sh uploadFiles ${CI_ENVIRONMENT_TIER}