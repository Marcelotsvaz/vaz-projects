#
# VAZ Projects
#
#
# Author: Marcelo Tellier Sartori Vaz <marcelotsvaz@gmail.com>



# General.
client_max_body_size			128M;

# TLS.
ssl_protocols					TLSv1.3 TLSv1.2;
ssl_ciphers						ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384;
ssl_ecdh_curve					X25519;
ssl_prefer_server_ciphers		on;

ssl_session_cache				shared:tls:10m;
ssl_session_timeout				10m;

ssl_certificate					/etc/nginx/tls/website.crt;
ssl_certificate_key				/etc/nginx/tls/websiteKey.pem;

# Optimizations.
tcp_nodelay						on;

# Logging.
log_format						json escape=json
								'{'
									'"msec": "${msec}",'
									
									'"remote_addr": "${remote_addr}",'
									'"http_x_forwarded_for": "${http_x_forwarded_for}",'
									
									'"ssl_protocol": "${ssl_protocol}",'
									'"ssl_cipher": "${ssl_cipher}",'
									'"server_protocol": "${server_protocol}",'
									'"request_method": "${request_method}",'
									'"scheme": "${scheme}",'
									'"http_host": "${http_host}",'
									'"request_uri": "${request_uri}",'
									
									'"request_length": "${request_length}",'
									'"http_referer": "${http_referer}",'
									'"http_user_agent": "${http_user_agent}",'
									
									'"status": "${status}",'
									'"bytes_sent": "${bytes_sent}",'
									'"body_bytes_sent": "${body_bytes_sent}",'
									'"request_time": "${request_time}",'
									
									'"upstream_addr": "${upstream_addr}",'
									'"upstream_connect_time": "${upstream_connect_time}",'
									'"upstream_header_time": "${upstream_header_time}",'
									'"upstream_response_time": "${upstream_response_time}"'
								'}';

access_log						/mnt/logs/nginx/nginx-access.log	json;
error_log						/mnt/logs/nginx/nginx-error.log		error;


# Reject requests with invalid host header.
server
{
	listen						[::]:80 ipv6only=off default_server;
	listen						[::]:443 ipv6only=off default_server;
	
	return						400;
}


# Redirect HTTP requests.
server
{
	listen						[::]:80;
	server_name					${domainName};
	
	return						308 https://${domainName}${request_uri};
}


# Proxy to Django.
server
{
	listen						[::]:443 ssl http2;
	server_name					${domainName};
	
	set $csp					"default-src 'none';";
	set $csp					"${csp} connect-src 'self';";
	set $csp					"${csp} img-src https://static-files.${domainName} https://c.disquscdn.com/next/embed/assets/img/ https://referrer.disqus.com/juggler/stat.gif;";
	set $csp					"${csp} style-src https://static-files.${domainName} https://c.disquscdn.com/next/embed/styles/;";
	set $csp					"${csp} font-src https://static-files.${domainName};";
	set $csp					"${csp} script-src https://static-files.${domainName} https://vazprojects.disqus.com/embed.js https://staging-vazprojects.disqus.com/embed.js;";
	set $csp					"${csp} frame-src https://disqus.com/embed/comments/ https://disqus.com/home/preload/";
	
	add_header					Strict-Transport-Security	'max-age=63072000; includeSubDomains; preload'	always;
	add_header					Content-Security-Policy		${csp}											always;
	add_header					Referrer-Policy				'strict-origin-when-cross-origin'				always;
	add_header					X-Content-Type-Options		'nosniff'										always;
	add_header					X-Frame-Options				'deny'											always;
	add_header					X-Xss-Protection			'1; mode=block'									always;
	
	
	location /
	{
		include					/etc/nginx/uwsgi_params;
		uwsgi_pass				uwsgi://application:3031;
	}
}


# Proxy to Grafana.
server
{
	listen						[::]:443 ssl http2;
	server_name					monitoring.${domainName};
	
	location /
	{
		proxy_pass				http://monitoring;
	}
}