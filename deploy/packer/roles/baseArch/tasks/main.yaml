# 
# VAZ Projects
# 
# 
# Author: Marcelo Tellier Sartori Vaz <marcelotsvaz@gmail.com>



    # Create base system.
    #---------------------------------------------------------------------------
  - name: Get packages from all roles
    set_fact:
        packages: '{{ packages | default( [] ) + lookup( "ansible.builtin.vars", item ) }}'
    with_varnames: ^.*_packages$


  - name: Run pacstrap
    become: true
    ansible.builtin.command: pacstrap -c {{ mountPoint }} --noprogressbar {{ packages | join( ' ' ) }}


  - name: Setup DNS
    become: true
    ansible.builtin.command: ln -sf /run/systemd/resolve/resolv.conf {{ mountPoint }}/etc/resolv.conf


  - name: Generate fstab
    become: true
    ansible.builtin.shell: genfstab -U {{ mountPoint }} >> {{ mountPoint }}/etc/fstab



    # Basic configuration.
    #---------------------------------------------------------------------------
  - name: Set time zone
    become: true
    ansible.builtin.command: ln -sf /usr/share/zoneinfo/America/Sao_Paulo {{ mountPoint }}/etc/localtime


  - name: Enable locales
    become: true
    ansible.builtin.lineinfile:
        path: '{{ mountPoint }}/etc/locale.gen'
        regex: ^#?({{ item }})
        line: '\1'
        backrefs: true
    loop:
      - 'en_US\.UTF-8 UTF-8'
      - 'pt_BR\.UTF-8 UTF-8'


  - name: Generate locales
    become: true
    ansible.builtin.command: arch-chroot {{ mountPoint }} locale-gen


  - name: Set locale
    become: true
    ansible.builtin.copy:
        content: LANG=en_US.UTF-8
        dest: '{{ mountPoint }}/etc/locale.conf'


  - name: Copy network unit
    become: true
    ansible.builtin.copy:
        src: main.network
        dest: '{{ mountPoint }}/etc/systemd/network/'
        mode: preserve


  - name: Enable services
    become: true
    ansible.builtin.shell: arch-chroot {{ mountPoint }} systemctl enable systemd-{networkd,resolved,timesyncd} sshd


  - name: Add wheel group to sudoers
    become: true
    ansible.builtin.copy:
        content: '%wheel ALL=(ALL) NOPASSWD: ALL'
        dest: '{{ mountPoint }}/etc/sudoers.d/wheel'



    # Install bootloader.
    #---------------------------------------------------------------------------
  - name: Install GRUB
    become: true
    ansible.builtin.command: arch-chroot {{ mountPoint }} grub-install {{ disk }}


  - name: Change GRUB config
    become: true
    ansible.builtin.lineinfile:
        path: '{{ mountPoint }}/etc/default/grub'
        regex: ^{{ item.var }}=
        line: '{{ item.var }}={{ item.value }}'
    loop:
      - { var: 'GRUB_CMDLINE_LINUX_DEFAULT', value: "'nomodeset console=ttyS0,9600n8 earlyprintk=serial,ttyS0,9600 loglevel=6'" }
      - { var: 'GRUB_TIMEOUT', value: 0 }


  - name: Generate GRUB config file
    become: true
    ansible.builtin.command: arch-chroot {{ mountPoint }} grub-mkconfig -o /boot/grub/grub.cfg