# 
# VAZ Projects
# 
# 
# Author: Marcelo Tellier Sartori Vaz <marcelotsvaz@gmail.com>



services:
    application:
        extends:
            service: application
            file: &applicationFile application/compose.yaml
        
        image: ${applicationImage-registry.gitlab.com/marcelotsvaz/vaz-projects/application:development}
        build: application/
        
        depends_on:
            postgres:
                condition: service_healthy
            minio:
                condition: service_healthy
        
        environment:
            DJANGO_SETTINGS_MODULE: ${DJANGO_SETTINGS_MODULE-settings.local}
            domain: &domain ${domain-localhost}
            staticFilesDomain: &staticFilesUrl ${staticFilesDomain-localhost}
            s3Endpoint: &s3Endpoint ${s3Endpoint-http://minio:9000}
            bucket: &bucket ${bucket-local}
            # Secrets.
            djangoSecretKey: django
            POSTGRES_PASSWORD: &postgresPassword postgres
            ELASTIC_PASSWORD: &elasticsearchPassword elastic
            AWS_ACCESS_KEY_ID: &AWS_ACCESS_KEY_ID ${AWS_ACCESS_KEY_ID-minioadmin}
            AWS_SECRET_ACCESS_KEY: &AWS_SECRET_ACCESS_KEY ${AWS_SECRET_ACCESS_KEY-minioadmin}
        
        command:
          - |-
            manage.py migrate --no-input
            manage.py collectstatic --ignore '*/src/*' --no-input
            manage.py search_index --populate
            manage.py runserver 0.0.0.0:8000 --nostatic
    
    
    memcached:
        extends:
            service: memcached
            file: *applicationFile
    
    
    elasticsearch:
        extends:
            service: elasticsearch
            file: *applicationFile
        
        environment:
            # Secrets.
            ELASTIC_PASSWORD: *elasticsearchPassword
    
    
    postgres:
        extends:
            service: postgres
            file: database/compose.yaml
        
        environment:
            # Secrets.
            POSTGRES_PASSWORD: *postgresPassword
    
    
    traefik:
        extends:
            service: traefik
            file: loadBalancer/compose.yaml
        
        environment:
            domain: *domain
            staticFilesUrl: *staticFilesUrl
    
    
    minio:
        image: minio/minio:RELEASE.2022-07-06T20-29-49Z
        
        restart: unless-stopped
        
        environment:
            bucket: *bucket
        
        volumes: [ media:/data ]
        
        entrypoint: [ /bin/sh, -c ]
        command: [ 'mkdir -p /data/$${bucket}/ && minio server /data --console-address :9001' ]
        
        ports:
          - 9000:9000
          - 9001:9001
        
        healthcheck:
            test: curl --silent minio:9000/minio/health/live
            interval: 5s
            start_period: 5s
    
    
    set-bucket-access:
        image: minio/mc:RELEASE.2022-07-06T14-54-36Z
        
        depends_on:
            minio:
                condition: service_healthy
        
        environment:
            s3Endpoint: *s3Endpoint
            bucket: *bucket
            # Secrets.
            AWS_ACCESS_KEY_ID: *AWS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY: *AWS_SECRET_ACCESS_KEY
        
        entrypoint: [ /bin/sh, -c ]
        command:
          - |-
            mc alias set minio $${s3Endpoint} $${AWS_ACCESS_KEY_ID} $${AWS_SECRET_ACCESS_KEY}
            mc policy set public minio/$${bucket}



volumes:
    media:
    postgres:



configs:
    elasticsearch:
        file: ./application/config/jvm.options
    traefikStatic:
        file: ./loadBalancer/config/traefik/static.yaml
    traefikDynamic:
        file: ./loadBalancer/config/traefik/dynamic.yaml



secrets:
    certificate:
        file: ./deployment/tls/website.crt
    certificateKey:
        file: ./deployment/tls/websiteKey.pem